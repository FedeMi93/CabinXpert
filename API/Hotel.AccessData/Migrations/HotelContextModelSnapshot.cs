// <auto-generated />
using System;
using Hotel.AccessData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.AccessData.Migrations
{
    [DbContext(typeof(HotelContext))]
    partial class HotelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Obligatorio_1.Entidades.Cabin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("EnabledReservation")
                        .HasColumnType("bit");

                    b.Property<bool>("JacuzziPriv")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NuRoom")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("NuRoom")
                        .IsUnique();

                    b.HasIndex("TypeId");

                    b.ToTable("Cabins", (string)null);
                });

            modelBuilder.Entity("Obligatorio_1.Entidades.CabinType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Type Name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CabinTypes", (string)null);
                });

            modelBuilder.Entity("Obligatorio_1.Entidades.Maintenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CabinId")
                        .HasColumnType("int");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CabinId");

                    b.ToTable("Maintenances", (string)null);
                });

            modelBuilder.Entity("Obligatorio_1.Entidades.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Obligatorio_1.Entidades.Cabin", b =>
                {
                    b.HasOne("Obligatorio_1.Entidades.CabinType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Obligatorio_1.Entidades.Cabin.Capacity#Obligatorio_1.Entidades.Capacity", "Capacity", b1 =>
                        {
                            b1.Property<int>("CabinId")
                                .HasColumnType("int");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("CabinId");

                            b1.ToTable("Cabins", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CabinId");
                        });

                    b.Navigation("Capacity")
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Obligatorio_1.Entidades.CabinType", b =>
                {
                    b.OwnsOne("Obligatorio_1.Entidades.CabinType.CostPerson#Obligatorio_1.Entidades.CostPerPerson", "CostPerson", b1 =>
                        {
                            b1.Property<int>("CabinTypeId")
                                .HasColumnType("int");

                            b1.Property<double>("Value")
                                .HasColumnType("float");

                            b1.HasKey("CabinTypeId");

                            b1.ToTable("CabinTypes", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CabinTypeId");
                        });

                    b.Navigation("CostPerson")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio_1.Entidades.Maintenance", b =>
                {
                    b.HasOne("Obligatorio_1.Entidades.Cabin", "Cabin")
                        .WithMany()
                        .HasForeignKey("CabinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Obligatorio_1.Entidades.Maintenance.NameOfWorker#Obligatorio_1.Entidades.NameWorker", "NameOfWorker", b1 =>
                        {
                            b1.Property<int>("MaintenanceId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MaintenanceId");

                            b1.ToTable("Maintenances", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MaintenanceId");
                        });

                    b.Navigation("Cabin");

                    b.Navigation("NameOfWorker")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio_1.Entidades.User", b =>
                {
                    b.OwnsOne("Obligatorio_1.Entidades.User.Password#Obligatorio_1.Entidades.Password", "Password", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Password")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
